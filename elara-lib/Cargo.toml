[package]
name = "elara-lib"
description = "A work-in-progress game which teaches you programming in a fun an interactive way :)"
version = "0.1.0"
authors = ["Alex Browne <stephenalexbrowne@gmail.com>"]
categories = ["wasm"]
license = "MIT OR Apache-2.0"
readme = "README.md"
edition = "2018"

[lib]
crate-type = ["cdylib"]

[profile.release]
# This makes the compiled code faster and smaller, but it makes compiling slower,
# so it's only enabled in release mode.
lto = true
opt-level = 'z'

[features]
# Use features to handle cross-platform compilation. This is a workaround
# to deal with the fact that activating the "rhai/wasm-bindgen" feature is
# required for compiling to WebAssembly, but it breaks native builds.
default = ["native"]
native = []
wasm = ["rhai/wasm-bindgen", "getrandom/js"]

[dependencies]
wasm-bindgen = "0.2.45"
wee_alloc = { version = "0.4.2", optional = true }
web-sys = { version = "0.3.45", features = ["console"] }
serde-wasm-bindgen = "0.4.3"
serde = { version = "1.0.144", features = ["derive"] }
rhai = { version = "1.9.1", features = ["debugging"] }
getrandom = { version = "0.2.7" }
console_error_panic_hook = "0.1.5"
spmc = "0.3.0"
wasm-bindgen-futures = "0.4.33"
js-sys = "0.3.22"
lazy_static = "1.4.0"
rand = "0.8.5"
regex = "1.7.1"


# # The `console_error_panic_hook` crate provides better debugging of panics by
# # logging them with `console.error`. This is great for development, but requires
# # all the `std::fmt` and `std::panicking` infrastructure, so it's only enabled
# # in debug mode.
# [target."cfg(debug_assertions)".dependencies]
# console_error_panic_hook = "0.1.5"

[dev-dependencies]
wasm-bindgen-test = "0.2.45"
futures = "0.1.27"
